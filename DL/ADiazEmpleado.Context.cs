//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ADiazEmpleadoEntities1 : DbContext
    {
        public ADiazEmpleadoEntities1()
            : base("name=ADiazEmpleadoEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Empleado> Empleadoes { get; set; }
        public virtual DbSet<Estado> Estadoes { get; set; }
    
        public virtual int AddEmpleado(string nombre, string apellidoPaterno, string apellidoMaterno, string numeroNomina, Nullable<int> idEstado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var numeroNominaParameter = numeroNomina != null ?
                new ObjectParameter("numeroNomina", numeroNomina) :
                new ObjectParameter("numeroNomina", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpleado", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, numeroNominaParameter, idEstadoParameter);
        }
    
        public virtual int DeleteEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<GetAllEmpleado_Result> GetAllEmpleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmpleado_Result>("GetAllEmpleado");
        }
    
        public virtual ObjectResult<GetAllEstado_Result> GetAllEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEstado_Result>("GetAllEstado");
        }
    
        public virtual ObjectResult<GetByIdEmpleado_Result> GetByIdEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdEmpleado_Result>("GetByIdEmpleado", idEmpleadoParameter);
        }
    
        public virtual int UpdateEmpleado(Nullable<int> idEmpleado, string nombre, string apellidoPaterno, string apellidoMaterno, string numeroNomina, Nullable<int> idEstado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var numeroNominaParameter = numeroNomina != null ?
                new ObjectParameter("numeroNomina", numeroNomina) :
                new ObjectParameter("numeroNomina", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpleado", idEmpleadoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, numeroNominaParameter, idEstadoParameter);
        }
    }
}
